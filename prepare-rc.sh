#!/bin/sh

# prepare-rc.sh is a simple tool to maintain rc files (such as .vimrc, .zshrc, .screenrc) on many hosts in consistent state
# Suggested workfow is as follows: 
#   you store all your actual preferences in a directory ("rc directory"),
#   sync the directory between your hosts using svn, git, Dropbox etc.,
#   to start using preferences from your rc directory, run prepare-rc.sh (once for every your hosts).
# 
# usage:
# prepare_all.sh <path to rc directory>
#
# structure of rc directory:
#   screenrc/
#      screenrc
#      screenrc.host.name1
#      screenrc.host.name2
#      ...
#   vimrc/
#      vimrc
#      vimrc.host.name1
#      ...
#   zshrc/
#      zshrc
#   bashrc/
#      bashrc
#
# previous versions of rc files are backed up to $HOME/prepare-rc-backup
# 


if [ -z "$1" ] 
then
    echo "usage:" >&2
    echo "prepare_all.sh <path to rc directory>" >&2
    echo "" >&2
    exit 1
fi

home="$HOME"
if [ -z $home ]
then 
    echo "empty \$HOME variable, try" >&2
    echo 'HOME=/path/to/your/homedir prepare_all.sh <path to rc directory>' >&2
    exit 2
fi

unset CDPATH

d=$(cd `dirname $0`; pwd)
conf_path=$( cd $1 ; pwd )
backup_dir="$home/prepare-rc-backup"
hn=`hostname`

echo "hostname: $hn"
echo "backup dir: $backup_dir"
echo "conf path: $conf_path"
echo ""

mkdir -p "$backup_dir" ||exit 3
for rc in `ls $conf_path/` ; do 
    echo "processing $rc"
    rc_file="$home/.$rc"
    echo "generating $rc_file"
    rc_backup="$backup_dir/$rc"_`date +'%Y%m%d%H%M%S'`
    touch "$rc_file"
    mv "$rc_file" "$rc_backup" || exit 4
    if [ $rc = "vimrc" ]
    then 
        comment_symbol='"'
    else
        comment_symbol="#"
    fi
    comment="$comment_symbol generated by $d/prepare-rc.sh ; DO NOT EDIT"

    echo "$comment" > $rc_file
    echo "source $conf_path/$rc/$rc" >> $rc_file

    host_specific="$conf_path/$rc/$rc.host.$hn"
    if [ -f $host_specific ]
    then
        echo "using host-specific file $host_specific" 
        echo "source $host_specific" >> $rc_file
    else
        echo "you can cpecify host-specific options in file $host_specific"
    fi

    echo "finished $rc"
    echo ""
done

echo "OK"

